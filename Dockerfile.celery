# Dockerfile for Celery workers
FROM python:3.11-slim-bullseye as base

# Set security labels
LABEL maintainer="Enterprise Auth Team"
LABEL version="1.0.0"
LABEL component="celery-worker"

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    libpq5 \
    curl \
    ca-certificates \
    && apt-get upgrade -y \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && rm -rf /tmp/* \
    && rm -rf /var/tmp/*

# Create non-root user
RUN groupadd -r celeryuser --gid=1001 && useradd -r -g celeryuser --uid=1001 celeryuser

# Set working directory
WORKDIR /app

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    C_FORCE_ROOT=1

# Copy requirements and install dependencies
COPY requirements.txt requirements/
COPY requirements/ requirements/
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements/production.txt

# Copy application code
COPY . .

# Set proper ownership
RUN chown -R celeryuser:celeryuser /app

# Create necessary directories
RUN mkdir -p /app/logs && \
    chown -R celeryuser:celeryuser /app/logs

# Switch to non-root user
USER celeryuser

# Health check for Celery worker
HEALTHCHECK --interval=60s --timeout=30s --start-period=60s --retries=3 \
    CMD celery -A enterprise_auth inspect ping || exit 1

# Default command for Celery worker
CMD ["celery", "-A", "enterprise_auth", "worker", "--loglevel=info", "--concurrency=4", "--max-tasks-per-child=1000"]