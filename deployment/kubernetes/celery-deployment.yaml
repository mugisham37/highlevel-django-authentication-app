apiVersion: apps/v1
kind: Deployment
metadata:
  name: enterprise-auth-celery-worker
  namespace: enterprise-auth
  labels:
    app.kubernetes.io/name: enterprise-auth
    app.kubernetes.io/component: celery-worker
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: enterprise-auth
      app.kubernetes.io/component: celery-worker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: enterprise-auth
        app.kubernetes.io/component: celery-worker
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9540"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      serviceAccountName: enterprise-auth-sa
      containers:
      - name: celery-worker
        image: enterprise-auth-celery:latest
        imagePullPolicy: Always
        command:
        - celery
        - -A
        - enterprise_auth
        - worker
        - --loglevel=info
        - --concurrency=4
        - --max-tasks-per-child=1000
        - --without-gossip
        - --without-mingle
        - --without-heartbeat
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CELERY_WORKER_NAME
          value: "$(POD_NAME)@$(POD_IP)"
        envFrom:
        - configMapRef:
            name: enterprise-auth-config
        - secretRef:
            name: enterprise-auth-secrets
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - celery
            - -A
            - enterprise_auth
            - inspect
            - ping
          initialDelaySeconds: 60
          periodSeconds: 60
          timeoutSeconds: 30
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - celery
            - -A
            - enterprise_auth
            - inspect
            - active
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 15
          failureThreshold: 3
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: logs
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - enterprise-auth
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - celery-worker
              topologyKey: kubernetes.io/hostname
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: enterprise-auth-celery-beat
  namespace: enterprise-auth
  labels:
    app.kubernetes.io/name: enterprise-auth
    app.kubernetes.io/component: celery-beat
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: enterprise-auth
      app.kubernetes.io/component: celery-beat
  template:
    metadata:
      labels:
        app.kubernetes.io/name: enterprise-auth
        app.kubernetes.io/component: celery-beat
        app.kubernetes.io/version: "1.0.0"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      serviceAccountName: enterprise-auth-sa
      containers:
      - name: celery-beat
        image: enterprise-auth-celery:latest
        imagePullPolicy: Always
        command:
        - celery
        - -A
        - enterprise_auth
        - beat
        - --loglevel=info
        - --scheduler=django_celery_beat.schedulers:DatabaseScheduler
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        envFrom:
        - configMapRef:
            name: enterprise-auth-config
        - secretRef:
            name: enterprise-auth-secrets
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: celery-beat-schedule
          mountPath: /app/celerybeat-schedule
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: logs
        emptyDir: {}
      - name: celery-beat-schedule
        persistentVolumeClaim:
          claimName: celery-beat-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: celery-beat-pvc
  namespace: enterprise-auth
  labels:
    app.kubernetes.io/name: enterprise-auth
    app.kubernetes.io/component: celery-beat
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: fast-ssd