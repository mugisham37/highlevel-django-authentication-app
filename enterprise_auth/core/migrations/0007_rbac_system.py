# Generated by Django 5.2.4 on 2025-08-05 09:28

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0006_add_session_security_models'),
    ]

    operations = [
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('resource_type', models.CharField(choices=[('user', 'User'), ('role', 'Role'), ('permission', 'Permission'), ('session', 'Session'), ('audit_log', 'Audit Log'), ('security_event', 'Security Event'), ('organization', 'Organization'), ('api_key', 'API Key'), ('webhook', 'Webhook'), ('system', 'System')], db_index=True, max_length=50)),
                ('action', models.CharField(choices=[('create', 'Create'), ('read', 'Read'), ('update', 'Update'), ('delete', 'Delete'), ('list', 'List'), ('execute', 'Execute'), ('manage', 'Manage'), ('admin', 'Admin')], db_index=True, max_length=50)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('conditions', models.JSONField(blank=True, default=dict, help_text='JSON conditions for permission evaluation')),
                ('metadata', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'db_table': 'rbac_permission',
                'ordering': ['resource_type', 'action', 'name'],
                'indexes': [models.Index(fields=['resource_type', 'action'], name='rbac_permis_resourc_bc5cff_idx'), models.Index(fields=['name', 'is_active'], name='rbac_permis_name_e933b1_idx')],
                'unique_together': {('resource_type', 'action', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_system_role', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_roles', to=settings.AUTH_USER_MODEL)),
                ('parent_role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_roles', to='core.role')),
            ],
            options={
                'db_table': 'rbac_role',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RolePermission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('granted_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('override_conditions', models.JSONField(blank=True, default=dict)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('granted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='granted_permissions', to=settings.AUTH_USER_MODEL)),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_assignments', to='core.permission')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_permissions', to='core.role')),
            ],
            options={
                'db_table': 'rbac_role_permissions',
                'ordering': ['-granted_at'],
            },
        ),
        migrations.AddField(
            model_name='role',
            name='permissions',
            field=models.ManyToManyField(blank=True, related_name='roles', through='core.RolePermission', to='core.permission'),
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('granted_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('expires_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('reason', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('granted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='granted_roles', to=settings.AUTH_USER_MODEL)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_assignments', to='core.role')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_roles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'rbac_userrole',
                'ordering': ['-granted_at'],
            },
        ),
        migrations.CreateModel(
            name='PermissionAuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('permission_check', 'Permission Check'), ('permission_granted', 'Permission Granted'), ('permission_denied', 'Permission Denied'), ('role_assigned', 'Role Assigned'), ('role_revoked', 'Role Revoked'), ('permission_created', 'Permission Created'), ('permission_updated', 'Permission Updated'), ('permission_deleted', 'Permission Deleted'), ('role_created', 'Role Created'), ('role_updated', 'Role Updated'), ('role_deleted', 'Role Deleted')], db_index=True, max_length=50)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('request_id', models.CharField(blank=True, db_index=True, max_length=255)),
                ('resource_type', models.CharField(blank=True, max_length=50)),
                ('resource_id', models.CharField(blank=True, max_length=255)),
                ('action_attempted', models.CharField(blank=True, max_length=50)),
                ('result', models.BooleanField(null=True)),
                ('reason', models.TextField(blank=True)),
                ('context_data', models.JSONField(blank=True, default=dict)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('permission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.permission')),
                ('target_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='permission_audit_targets', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='permission_audits', to=settings.AUTH_USER_MODEL)),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.role')),
            ],
            options={
                'db_table': 'rbac_permission_audit_log',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', 'timestamp'], name='rbac_permis_user_id_a51569_idx'), models.Index(fields=['action', 'timestamp'], name='rbac_permis_action_9840c7_idx'), models.Index(fields=['resource_type', 'timestamp'], name='rbac_permis_resourc_c6471a_idx'), models.Index(fields=['result', 'timestamp'], name='rbac_permis_result_1fbaae_idx'), models.Index(fields=['request_id'], name='rbac_permis_request_fd8f90_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='rolepermission',
            index=models.Index(fields=['role', 'is_active'], name='rbac_role_p_role_id_3bdcf8_idx'),
        ),
        migrations.AddIndex(
            model_name='rolepermission',
            index=models.Index(fields=['permission', 'is_active'], name='rbac_role_p_permiss_3af738_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='rolepermission',
            unique_together={('role', 'permission')},
        ),
        migrations.AddIndex(
            model_name='role',
            index=models.Index(fields=['name', 'is_active'], name='rbac_role_name_5eddca_idx'),
        ),
        migrations.AddIndex(
            model_name='role',
            index=models.Index(fields=['parent_role', 'is_active'], name='rbac_role_parent__091748_idx'),
        ),
        migrations.AddIndex(
            model_name='userrole',
            index=models.Index(fields=['user', 'is_active'], name='rbac_userro_user_id_78ba5c_idx'),
        ),
        migrations.AddIndex(
            model_name='userrole',
            index=models.Index(fields=['role', 'is_active'], name='rbac_userro_role_id_a513d2_idx'),
        ),
        migrations.AddIndex(
            model_name='userrole',
            index=models.Index(fields=['expires_at', 'is_active'], name='rbac_userro_expires_f84f45_idx'),
        ),
        migrations.AddIndex(
            model_name='userrole',
            index=models.Index(fields=['granted_at'], name='rbac_userro_granted_ea24e7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userrole',
            unique_together={('user', 'role')},
        ),
    ]
