# Generated by Django 5.2.4 on 2025-08-05 11:44

import django.core.serializers.json
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('core', '0007_rbac_system'),
    ]

    operations = [
        migrations.CreateModel(
            name='DataProcessingPurpose',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('purpose_type', models.CharField(choices=[('authentication', 'User Authentication'), ('authorization', 'Access Control'), ('security', 'Security Monitoring'), ('analytics', 'Usage Analytics'), ('communication', 'User Communication'), ('legal_compliance', 'Legal Compliance'), ('service_improvement', 'Service Improvement')], max_length=50)),
                ('description', models.TextField()),
                ('legal_basis', models.CharField(max_length=200)),
                ('retention_period_days', models.IntegerField()),
                ('is_essential', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Data Processing Purpose',
                'verbose_name_plural': 'Data Processing Purposes',
                'db_table': 'compliance_data_processing_purpose',
            },
        ),
        migrations.CreateModel(
            name='PrivacyPolicyVersion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('version', models.CharField(max_length=20, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('effective_date', models.DateTimeField()),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
                ('is_current', models.BooleanField(default=False)),
                ('requires_explicit_consent', models.BooleanField(default=True)),
                ('changes_summary', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'compliance_privacy_policy_version',
                'ordering': ['-effective_date'],
            },
        ),
        migrations.CreateModel(
            name='ComplianceAuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('audit_id', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('activity_type', models.CharField(choices=[('authentication', 'Authentication'), ('authorization', 'Authorization'), ('data_access', 'Data Access'), ('data_modification', 'Data Modification'), ('system_configuration', 'System Configuration'), ('security_event', 'Security Event'), ('compliance_action', 'Compliance Action'), ('admin_action', 'Administrative Action')], db_index=True, max_length=30)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='low', max_length=10)),
                ('session_id', models.CharField(blank=True, max_length=255)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('request_id', models.CharField(blank=True, max_length=255)),
                ('object_id', models.CharField(blank=True, max_length=255)),
                ('action', models.CharField(max_length=100)),
                ('resource', models.CharField(max_length=100)),
                ('outcome', models.CharField(max_length=20)),
                ('details', models.JSONField(default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('before_state', models.JSONField(default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('after_state', models.JSONField(default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('checksum', models.CharField(blank=True, max_length=64)),
                ('previous_log_checksum', models.CharField(blank=True, max_length=64)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'compliance_audit_log',
                'indexes': [models.Index(fields=['timestamp', 'activity_type'], name='compliance__timesta_a01b80_idx'), models.Index(fields=['user', 'timestamp'], name='compliance__user_id_224a20_idx'), models.Index(fields=['ip_address', 'timestamp'], name='compliance__ip_addr_296655_idx'), models.Index(fields=['session_id'], name='compliance__session_410e29_idx'), models.Index(fields=['audit_id'], name='compliance__audit_i_a32e0f_idx'), models.Index(fields=['severity', 'timestamp'], name='compliance__severit_123240_idx')],
            },
        ),
        migrations.CreateModel(
            name='ComplianceReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when this record was last updated')),
                ('correlation_id', models.CharField(blank=True, help_text='Correlation ID for request tracking', max_length=36, null=True)),
                ('report_id', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('report_type', models.CharField(choices=[('gdpr_compliance', 'GDPR Compliance Report'), ('ccpa_compliance', 'CCPA Compliance Report'), ('soc2_audit', 'SOC2 Audit Report'), ('security_assessment', 'Security Assessment Report'), ('data_processing', 'Data Processing Report'), ('breach_notification', 'Breach Notification Report')], max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('generated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('file_size_bytes', models.BigIntegerField(blank=True, null=True)),
                ('summary', models.JSONField(default=dict)),
                ('recommendations', models.JSONField(default=list)),
                ('is_confidential', models.BooleanField(default=True)),
                ('retention_until', models.DateTimeField()),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('generated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'compliance_report',
                'indexes': [models.Index(fields=['report_type', 'generated_at'], name='compliance__report__13c92e_idx'), models.Index(fields=['period_start', 'period_end'], name='compliance__period__44ed35_idx')],
            },
        ),
        migrations.CreateModel(
            name='DataDeletionRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when this record was last updated')),
                ('correlation_id', models.CharField(blank=True, help_text='Correlation ID for request tracking', max_length=36, null=True)),
                ('request_id', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('deletion_scope', models.CharField(choices=[('full_account', 'Full Account Deletion'), ('specific_data', 'Specific Data Types'), ('inactive_data', 'Inactive Data Only')], default='full_account', max_length=20)),
                ('requested_data_types', models.JSONField(default=list)),
                ('reason', models.TextField()),
                ('legal_basis', models.CharField(max_length=200)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('processing_started_at', models.DateTimeField(blank=True, null=True)),
                ('processing_completed_at', models.DateTimeField(blank=True, null=True)),
                ('deletion_summary', models.JSONField(default=dict)),
                ('retention_exceptions', models.JSONField(default=list)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_deletions', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_deletion_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'compliance_data_deletion_request',
                'indexes': [models.Index(fields=['user', 'status'], name='compliance__user_id_e40135_idx'), models.Index(fields=['request_id'], name='compliance__request_a8731b_idx'), models.Index(fields=['created_at'], name='compliance__created_a034e0_idx')],
            },
        ),
        migrations.CreateModel(
            name='DataDisclosureLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when this record was last updated')),
                ('correlation_id', models.CharField(blank=True, help_text='Correlation ID for request tracking', max_length=36, null=True)),
                ('disclosure_id', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('disclosure_type', models.CharField(choices=[('legal_request', 'Legal Request'), ('law_enforcement', 'Law Enforcement'), ('regulatory', 'Regulatory Authority'), ('service_provider', 'Service Provider'), ('business_transfer', 'Business Transfer'), ('user_consent', 'User Consent')], max_length=30)),
                ('recipient_name', models.CharField(max_length=200)),
                ('recipient_contact', models.CharField(max_length=200)),
                ('legal_basis', models.CharField(max_length=200)),
                ('data_categories', models.JSONField(default=list)),
                ('purpose', models.TextField()),
                ('disclosure_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('retention_period', models.CharField(max_length=100)),
                ('user_notified', models.BooleanField(default=False)),
                ('user_notification_date', models.DateTimeField(blank=True, null=True)),
                ('supporting_documents', models.JSONField(default=list)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_disclosures', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'compliance_data_disclosure_log',
                'indexes': [models.Index(fields=['user', 'disclosure_type'], name='compliance__user_id_9f130f_idx'), models.Index(fields=['disclosure_date'], name='compliance__disclos_5cec9d_idx'), models.Index(fields=['recipient_name'], name='compliance__recipie_ed24a3_idx')],
            },
        ),
        migrations.CreateModel(
            name='DataExportRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when this record was last updated')),
                ('correlation_id', models.CharField(blank=True, help_text='Correlation ID for request tracking', max_length=36, null=True)),
                ('request_id', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('export_format', models.CharField(choices=[('json', 'JSON'), ('csv', 'CSV'), ('xml', 'XML')], default='json', max_length=10)),
                ('requested_data_types', models.JSONField(default=list)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('file_size_bytes', models.BigIntegerField(blank=True, null=True)),
                ('download_expires_at', models.DateTimeField(blank=True, null=True)),
                ('downloaded_at', models.DateTimeField(blank=True, null=True)),
                ('download_count', models.IntegerField(default=0)),
                ('processing_started_at', models.DateTimeField(blank=True, null=True)),
                ('processing_completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_export_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'compliance_data_export_request',
                'indexes': [models.Index(fields=['user', 'status'], name='compliance__user_id_09fd29_idx'), models.Index(fields=['request_id'], name='compliance__request_05cfae_idx'), models.Index(fields=['created_at'], name='compliance__created_373c54_idx')],
            },
        ),
        migrations.CreateModel(
            name='ConsentRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when this record was last updated')),
                ('correlation_id', models.CharField(blank=True, help_text='Correlation ID for request tracking', max_length=36, null=True)),
                ('status', models.CharField(choices=[('granted', 'Granted'), ('withdrawn', 'Withdrawn'), ('expired', 'Expired'), ('pending', 'Pending')], default='pending', max_length=20)),
                ('consent_given_at', models.DateTimeField(blank=True, null=True)),
                ('consent_withdrawn_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('consent_method', models.CharField(max_length=50)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('consent_text', models.TextField()),
                ('version', models.CharField(max_length=20)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consent_records', to=settings.AUTH_USER_MODEL)),
                ('purpose', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.dataprocessingpurpose')),
            ],
            options={
                'db_table': 'compliance_consent_record',
                'indexes': [models.Index(fields=['user', 'status'], name='compliance__user_id_3729dc_idx'), models.Index(fields=['purpose', 'status'], name='compliance__purpose_4b4b01_idx'), models.Index(fields=['consent_given_at'], name='compliance__consent_cb9df7_idx')],
                'unique_together': {('user', 'purpose')},
            },
        ),
        migrations.CreateModel(
            name='PrivacyPolicyAcceptance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when this record was last updated')),
                ('correlation_id', models.CharField(blank=True, help_text='Correlation ID for request tracking', max_length=36, null=True)),
                ('accepted_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('acceptance_method', models.CharField(max_length=50)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='privacy_acceptances', to=settings.AUTH_USER_MODEL)),
                ('policy_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.privacypolicyversion')),
            ],
            options={
                'db_table': 'compliance_privacy_policy_acceptance',
                'indexes': [models.Index(fields=['user', 'accepted_at'], name='compliance__user_id_b7ad55_idx'), models.Index(fields=['policy_version', 'accepted_at'], name='compliance__policy__c920aa_idx')],
                'unique_together': {('user', 'policy_version')},
            },
        ),
        migrations.CreateModel(
            name='SecurityVulnerability',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when this record was last updated')),
                ('correlation_id', models.CharField(blank=True, help_text='Correlation ID for request tracking', max_length=36, null=True)),
                ('vulnerability_id', models.CharField(max_length=50, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=10)),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('false_positive', 'False Positive'), ('accepted_risk', 'Accepted Risk')], default='open', max_length=20)),
                ('cve_id', models.CharField(blank=True, max_length=20)),
                ('owasp_category', models.CharField(blank=True, max_length=50)),
                ('affected_components', models.JSONField(default=list)),
                ('discovery_method', models.CharField(max_length=100)),
                ('discovered_by', models.CharField(max_length=100)),
                ('discovered_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('remediation_plan', models.TextField(blank=True)),
                ('remediation_deadline', models.DateTimeField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'compliance_security_vulnerability',
                'indexes': [models.Index(fields=['severity', 'status'], name='compliance__severit_295b07_idx'), models.Index(fields=['discovered_at'], name='compliance__discove_e81722_idx'), models.Index(fields=['status'], name='compliance__status_39330a_idx')],
            },
        ),
    ]
